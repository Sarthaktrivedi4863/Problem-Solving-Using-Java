import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'isValid' function below.
     *
     * The function is expected to return a STRING.
     * The function accepts STRING s as parameter.
     */

    public static String isValid(String s) {
    // Write your code here
        int n = s.length();
        HashSet<Character> hs = new HashSet();
        int uni=0;
        for(int i=0;i<n;i++)
        {
         if(!hs.contains(s.charAt(i)))
             hs.add(s.charAt(i));
        }
        uni=hs.size();
        hs.clear();
        
        System.out.println(uni);
    char [] arr = new char[uni];
        int k=0;
        for(int i=0;i<n;i++)
        {
         if(!hs.contains(s.charAt(i)))
            { hs.add(s.charAt(i));
             arr[k]=s.charAt(i);
             k++;
            }
        }
        int [] count = new int[uni];
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<uni;j++)
            {
                if(s.charAt(i)==arr[j])
                    count[j]+=1;
            }
        }
        System.out.println(Arrays.toString(arr));
         System.out.println(Arrays.toString(count));
        int a=count[0],y=0;
        for(int i=1;i<uni;i++)
        {
            if(a!=count[i])
            {
                y++;
                if(y==2)
                    return "NO";
            }
        }
        return "YES";
    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        String s = bufferedReader.readLine();

        String result = Result.isValid(s);

        bufferedWriter.write(result);
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
